---
name: DevelopmentBuildPipeline

"on":
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

permissions:
  contents: write

jobs:
  test:
    name: Build and test (${{ matrix.distro }})
    strategy:
      fail-fast: false
      matrix:
        distro: [debian-12, debian-13, ubuntu-24.04, ubuntu-22.04, macos-14]
        include:
          - distro: debian-12
            os: ubuntu-22.04
            container: debian:12
          - distro: debian-13
            os: ubuntu-22.04
            container: debian:trixie
          - distro: ubuntu-24.04
            os: ubuntu-24.04
          - distro: ubuntu-22.04
            os: ubuntu-22.04
          - distro: macos-14
            os: macos-14
    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/build-and-test
        with:
          distro: ${{ matrix.distro }}

  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - name: Install cppcheck
        run: sudo apt-get update && sudo apt-get install -y cppcheck
      - name: Run cppcheck
        run: |
          cppcheck --enable=all --std=c++17 \
            --suppress=missingIncludeSystem \
            src
  release:
    needs: [test, lint]
    if: github.ref == 'refs/heads/dev' && github.event_name == 'push'
    strategy:
      matrix:
        include:
          - os: ubuntu-24.04
            build_script: packaging/debian/build_deb.sh
            checksum: sha256sum
          - os: macos-14
            build_script: packaging/macos/build_pkg.sh
            checksum: "shasum -a 256"
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Build packages
        run: |
          chmod +x ${{ matrix.build_script }}
          ${{ matrix.build_script }} ${{ github.run_number }}
      - name: Generate checksums
        run: |
          cd dist
          ${{ matrix.checksum }} * > CHECKSUMS.txt
          cat CHECKSUMS.txt
      - name: Generate release notes
        id: release_notes
        run: |
          echo "## Changes" > release_notes.md
          git log -n 30 --pretty=format:"* %h %s (%an)" >> release_notes.md
          COMMITS=$(git log -n 30 --pretty=format:%h | wc -l)
          AUTHORS=$(git log -n 30 --format='%an' | sort -u | wc -l)
          echo -e "\n## Stats\n* Commits: $COMMITS\n* Authors: $AUTHORS" >> release_notes.md
          git log -n 30 --format='%an' | sort | uniq -c | sed 's/^/  /' >> release_notes.md
          echo -e "\n## Security" >> release_notes.md
          echo "All artifacts include SHA256 checksums in \`CHECKSUMS.txt\`. Verify downloads with:" >> release_notes.md
          echo >> release_notes.md
          echo -e '\n```bash\nsha256sum -c CHECKSUMS.txt\n```\n' >> release_notes.md
          echo -e "## Links" >> release_notes.md
          echo "- [README](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/README.md)" >> release_notes.md
          echo "- [INSTALL](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/INSTALL.md)" >> release_notes.md
          echo "body<<EOF" >> $GITHUB_OUTPUT
          cat release_notes.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GH_PAT }}
          tag_name: v${{ github.run_number }}
          name: Release ${{ github.run_number }}
          draft: false
          prerelease: true
          files: dist/*
          body: ${{ steps.release_notes.outputs.body }}
