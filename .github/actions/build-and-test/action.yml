---
name: Build and Test
description: Checkout repository, install dependencies, build, and upload artifacts
inputs:
  distro:
    description: "Target distribution"
    required: true
runs:
  using: composite
  steps:
    - uses: actions/checkout@v4
    - name: Install dependencies (Debian/Ubuntu)
      if: ${{ contains('debian-12 debian-13 ubuntu-24.04 ubuntu-22.04', inputs.distro) }}
      shell: bash
      run: |
        SUDO=""
        command -v sudo >/dev/null 2>&1 && SUDO="sudo"
        $SUDO apt-get update

        $SUDO apt-get install -y \
          build-essential \
          autoconf automake libtool pkg-config \
          gettext \
          autopoint \
          libxml2-dev libcurl4-openssl-dev \
          mariadb-client libmariadb-dev libpq-dev libmicrohttpd-dev libsqlite3-dev wget

        dpkg -s libmariadb-dev | grep -q '^Status: install ok'
        test -f /usr/include/mariadb/mysql.h || test -f /usr/include/mysql/mysql.h
        mariadb_config --version
        wget https://ftp.gnu.org/pub/gnu/gettext/gettext-0.22.tar.gz
        tar -xf gettext-0.22.tar.gz
        cd gettext-0.22
        ./configure --disable-shared
        make -j$(nproc)
        $SUDO make install
        cd ..
        echo "PATH=/usr/local/bin:$PATH" >> $GITHUB_ENV
        export CPPFLAGS="$(mariadb_config --cflags) $CPPFLAGS"
        export LDFLAGS="$(mariadb_config --libs) $LDFLAGS"
    - name: Install dependencies (macOS)
      if: ${{ inputs.distro == 'macos-14' }}
      shell: bash
      run: |
        brew update
        brew install \
          autoconf automake libtool pkg-config gettext \
          libxml2 curl mariadb libpq libmicrohttpd
        B=/opt/homebrew/opt
        export PKG_CONFIG_PATH=$B/libxml2/lib/pkgconfig:$PKG_CONFIG_PATH
        export PKG_CONFIG_PATH=$B/mariadb/lib/pkgconfig:$PKG_CONFIG_PATH
        export PKG_CONFIG_PATH=$B/libpq/lib/pkgconfig:$PKG_CONFIG_PATH
        export PATH=$B/mariadb/bin:$PATH
        export PATH=$B/gettext/bin:$PATH
        export CPPFLAGS=-I$B/mariadb/include $CPPFLAGS
        export LDFLAGS=-L$B/mariadb/lib $LDFLAGS
        mariadb_config --version
        echo "PATH=$PATH" >> $GITHUB_ENV
        echo "CPPFLAGS=$CPPFLAGS" >> $GITHUB_ENV
        echo "LDFLAGS=$LDFLAGS" >> $GITHUB_ENV
        echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH" >> $GITHUB_ENV
    - name: Show environment variables
      if: ${{ inputs.distro == 'macos-14' }}
      shell: bash
      run: |
        echo "PATH=$PATH"
        echo "CPPFLAGS=$CPPFLAGS"
        echo "LDFLAGS=$LDFLAGS"
        echo "PKG_CONFIG_PATH=$PKG_CONFIG_PATH"
        echo "DYLD_LIBRARY_PATH=$DYLD_LIBRARY_PATH"
    - name: Verify autopoint
      shell: bash
      run: autopoint --version
    - name: Run autogen script
      shell: bash
      run: |
        set -o pipefail
        ./autogen.sh 2>&1 | tee autogen.log
    - name: Configure
      shell: bash
      run: |
        set -o pipefail
        ./configure 2>&1 | tee configure.log
    - name: Build
      shell: bash
      run: |
        set -o pipefail
        make 2>&1 | tee build.log
    - name: Test
      shell: bash
      run: |
        set -o pipefail
        export MARIADB_TEST_HOST="${MARIADB_TEST_HOST}"
        export MARIADB_TEST_USER="${MARIADB_TEST_USER}"
        export MARIADB_TEST_PASS="${MARIADB_TEST_PASS}"
        export ICECAST_DEV_HOST="${ICECAST_DEV_HOST}"
        export ICECAST_DEV_PORT="${ICECAST_DEV_PORT}"
        export ICEADMINUSER="${ICEADMINUSER}"
        export ICEUSERPASS="${ICEUSERPASS}"
        make check 2>&1 | tee test.log
    - name: Verify scastd --help
      shell: bash
      run: |
        set -e
        ./src/scastd --help > scastd-help.log 2>&1
        cat scastd-help.log
    - name: Upload build artifacts and logs
      if: ${{ always() }}
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.distro }}-logs
        path: |
          autogen.log
          configure.log
          build.log
          test.log
          scastd-help.log
          config.log
          src/scastd
          src/.libs/scastd
        if-no-files-found: ignore
